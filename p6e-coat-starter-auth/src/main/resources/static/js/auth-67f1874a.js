import{d as i,U as o,A as s,G as n,R as r}from"./index-367b30ac.js";const h=i("auth",{state:()=>({expire:0,tokenType:"",accessToken:"",refreshToken:""}),actions:{init(){const e=o.cache.getAuth();return e&&e.accessToken&&this.setData(e),e},setData(e){this.$state.expire=e.expire,this.$state.tokenType=e.tokenType,this.$state.accessToken=e.accessToken,this.$state.refreshToken=e.refreshToken,s.setToken(e.accessToken),o.cache.setAuth(e)},delData(){this.$state.expire=0,this.$state.tokenType="",this.$state.accessToken="",this.$state.refreshToken="",s.delToken(),o.cache.delAuth()},executeResultHandler(e){e.oauth2?n.toLoginReconfirmPage():n.toHomePage()},async ap(e,a){if(n.getApLoginRsa()){const c=await this.apo();if(typeof c=="string")a=r(a,c);else return c}const t=await s.auth.ap({account:e,password:a});return t&&t.code===0&&(this.setData(t.data),this.executeResultHandler(t.data)),t},async apo(){const e=await s.auth.apo();return e&&e.code===0?e.data.content:e},async ac(e){const a=await s.auth.ac({code:e});return a&&a.code===0&&(this.setData(a.data),this.executeResultHandler(a.data)),a},async aco(e){if(o.cache.getLoginCodeCountDownTime()<=0){const t=await s.auth.aco({account:e});return t&&t.code===0&&o.cache.setLoginCodeCountDownTime(n.getAcLoginCountDownTime()),t}else return{code:-1,message:"SERVER_ERROR"}},async qc(){const e=await s.auth.qc();return e&&e.code===0&&(this.setData(e.data),this.executeResultHandler(e.data)),e},async qco(){return await s.auth.qco()},async logout(){const e=await s.auth.logout();return this.delData(),n.toLoginPage(),e},async qqc(e,a){const t=await s.auth.qqc({code:e,state:a});return t&&t.code===0&&(this.setData(t.data),this.executeResultHandler(t.data)),t},async o2r(){const e=await s.auth.o2r();return e&&e.code===0&&(window.location.href=`${e.data.redirectUri}?code=${e.data.code}&state=${e.data.state}`),e},async re(e,a){return await s.auth.re({code:e,password:a})},async reo(e){if(o.cache.getRegisterCodeCountDownTime()<=0){const t=await s.auth.reo({account:e});return t&&t.code===0&&o.cache.setRegisterCodeCountDownTime(n.getRegisterCountDownTime()),t}else return{code:-1,message:"SERVER_ERROR"}},async fp(e,a,t){return await s.auth.fp({code:a,account:e,password:t})},async fpo(e){if(o.cache.getForgotPasswordCodeCountDownTime()<=0){const t=await s.auth.fpo({account:e});return t&&t.code===0&&o.cache.setForgotPasswordCodeCountDownTime(n.getForgotPasswordCountDownTime()),t}else return{code:-1,message:"SERVER_ERROR"}}}});export{h as u};
